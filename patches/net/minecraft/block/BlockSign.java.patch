--- ../src-base/minecraft/net/minecraft/block/BlockSign.java
+++ ../src-work/minecraft/net/minecraft/block/BlockSign.java
@@ -2,10 +2,13 @@
 
 import java.util.Random;
 import javax.annotation.Nullable;
+
+import carpet.CarpetSettings;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.BlockFaceShape;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
@@ -15,6 +18,7 @@
 import net.minecraft.util.EnumHand;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
+import net.minecraft.util.text.ITextComponent;
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
@@ -95,4 +99,43 @@
     {
         return BlockFaceShape.UNDEFINED;
     }
+
+    // VasCM
+    @Override
+    public boolean func_149740_M(IBlockState state) {
+        return CarpetSettings.signComparatorOutput;
+    }
+
+    @Override
+    public int func_180641_l(IBlockState blockState, World worldIn, BlockPos pos) {
+        if (!CarpetSettings.signComparatorOutput) return 0;
+        BlockPos attachedPos = null;
+        if (this instanceof BlockStandingSign) attachedPos = pos.func_177977_b();
+        else if (this instanceof BlockWallSign) {
+            attachedPos = pos.func_177972_a(blockState.func_177229_b(BlockWallSign.field_176412_a).func_176734_d());
+        }
+        TileEntity tileEntity;
+        if (attachedPos != null && worldIn.func_180495_p(attachedPos).func_177230_c() == Blocks.field_150484_ah) {
+            TileEntitySign sign = (tileEntity = worldIn.func_175625_s(pos)) instanceof TileEntitySign ?
+                    (TileEntitySign) tileEntity : null;
+            if (sign != null) {
+                ITextComponent component = sign.field_145915_a[0];
+                try {
+                    String text = component.func_150260_c();
+                    int radix = 10;
+                    if (text.startsWith("0b")) {
+                        radix = 2; text = text.substring(2);
+                    } else if (text.startsWith("0x")) {
+                        radix = 16; text = text.substring(2);
+                    } else if (text.startsWith("0")) {
+                        radix = 8; text = text.substring(1);
+                    }
+                    return Integer.parseInt(text, radix);
+                } catch (NumberFormatException e) {
+                    return 0;
+                }
+            }
+        }
+        return 0;
+    }
 }
